apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "docuhost.fullname" . }}
  labels: {{- include "docuhost.labels" . | nindent 4 }}
    app.kubernetes.io/component: docuhost
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels: {{- include "docuhost.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: docuhost
  strategy:
    type: Recreate
  template:
    metadata:
      {{- if .Values.podAnnotations }}
      annotations: {{ .Values.podAnnotations | toYaml | nindent 8 }}
      {{- end }}
      labels: {{- include "docuhost.labels" . | nindent 8 }}
        app.kubernetes.io/component: docuhost
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets: {{- .Values.imagePullSecrets | toYaml | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "docuhost.serviceAccountName" . }}
      {{- if .Values.podSecurityContext }}
      securityContext: {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      initContainers:
        - name: wait-for-db
          image: {{ .Values.wait.image.name }}:{{ .Values.wait.image.tag }}
          imagePullPolicy: {{ .Values.wait.image.pullPolicy }}
          args:
            - pod
            - -lapp.kubernetes.io/component=mongodb
      containers:
        - name: docuhost
          {{- if .Values.securityContext }}
          securityContext: {{- .Values.securityContext | toYaml | nindent 12 }}
          {{- end }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- include "docuhost.env.database" . | nindent 12 }}
            - name: APP_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "docuhost.configMapName" . }}
                  key: app-url
            - name: AUTH_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "docuhost.secretName" . }}
                  key: auth-secret
            - name: AUTH_TRUST_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "docuhost.configMapName" . }}
                  key: auth-trust-host
            - name: AUTH_AUTH0_AUDIENCE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "docuhost.configMapName" . }}
                  key: auth0-audience
            - name: AUTH_AUTH0_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "docuhost.secretName" . }}
                  key: auth0-id
            - name: AUTH_AUTH0_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "docuhost.secretName" . }}
                  key: auth0-secret
            - name: AUTH_AUTH0_ISSUER
              valueFrom:
                configMapKeyRef:
                  name: {{ include "docuhost.configMapName" . }}
                  key: auth0-issuer
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: {{ include "docuhost.configMapName" . }}
                  key: app-env
            - name: SHORTLINK_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "docuhost.secretName" . }}
                  key: shortlink-apiKey
            - name: SHORTLINK_DOMAIN
              valueFrom:
                configMapKeyRef:
                  name: {{ include "docuhost.configMapName" . }}
                  key: shortlink-domain
            - name: SHORTLINK_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "docuhost.configMapName" . }}
                  key: shortlink-serviceUrl
          ports:
            - name: http
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
          readinessProbe:
            httpGet:
              path: /api/v2/healthcheck
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
          {{- if .Values.resources }}
          resources: {{- .Values.resources | toYaml | nindent 12 }}
          {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- .Values.nodeSelector | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{- .Values.affinity | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- .Values.tolerations | toYaml | nindent 8 }}
      {{- end }}
