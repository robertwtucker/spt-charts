##
# DocuHost configuration parameters
##
# DocuHost image
image:
  # -- DocuHost image registry
  # registry: registry.sptcloud.com
  # -- DocuHost image repository
  repository: docuhost
  # repository: spt/docuhost
  # -- Override tag specified by `appVersion` in the chart file
  tag: latest
  # -- DocuHost image pull policy
  pullPolicy: IfNotPresent
  # -- DocuHost image pull secrets
# -- List of image repository pull secrets
# Secrets must be manually created in the namespace.
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
# Example:
# imagePullSecrets:
#   - name: myRegistryKeySecretName
imagePullSecrets: []
# Server configuration
server:
  # -- Port to listen on (must match containerPort)
  port: 8080
  # -- Time (in seconds) to wait before initiating shutdown or terminating read/write ops
  timeout: 20
# Database configuration
db:
  # -- Database prefix (identifies standard connection format for URI creation)
  prefix: "mongodb://"
  # -- Database user
  username: ""
  # -- Database password
  password: ""
  # -- Database host
  host: ""
  # -- Database port
  port: 27017
  # -- Database name
  name: "docuhost"
  # -- Database connection timeout (seconds)
  timeout: 10
# Log configuration
log:
  # -- Use debug log settings
  debug: false
# -- Partially override the name used for chart objects
nameOverride: ""
# -- Fully override the name used for chart objects
fullnameOverride: ""
# -- Name of a pre-existing configmap to use (one will be created by default)
existingConfigMap: ""
# -- Name of a pre-existing secret to use (one will be created by default)
existingSecret: ""

##
# DocuHost deployment resource paramaters
##
# -- Number of DocuHost containers to deploy
replicaCount: 1
# DocuHost service account parameters
serviceAccount:
  # -- Enable service account creation (will use `default` if false)
  create: false
  # -- Annotations to use with the service account
  annotations: {}
  # -- Force the name used for the service account
  name: ""
# -- DocuHost container port
containerPort: 8080
# DocuHost container resource requirements
# ref: https://kubernetes.io/docs/user-guide/compute-resources/
resources:
  # -- Resource limits for the DocuHost container
  limits: {}
  # -- Requested resources for the DocuHost container
  requests:
    memory: 256Mi
    cpu: 100m
# -- Annotations for DocuHost pods
podAnnotations: {}
# -- Configure DocuHost pod security context
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
podSecurityContext:
  # -- ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups.
  runAsUser: 11000
  # -- ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems.
  fsGroup: 11000
  # -- ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups.
  runAsNonRoot: true
# -- Configure security context
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
securityContext:
  # -- ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged.
  privileged: false
  # -- ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation.
  allowPrivilegeEscalation: false
  # -- ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups.
  runAsUser: 11000
  # -- ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#capabilities.
  # -- The default (recommended) configuration prohibits all Linux capabilities.
  capabilities:
    drop:
      - all
# -- Node labels for pod assignment
#ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}
# -- Tolerations for pod assignment
# ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []
# -- Affinity for pod assignment
# ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
# NOTE: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when set
affinity: {}
# Liveness probe settings
livenessProbe:
  # -- Initial delay before probing liveness
  initialDelaySeconds: 10
  # -- Period in seconds between liveness checks
  periodSeconds: 10
  # -- Timeout in seconds for liveness checks
  timeoutSeconds: 5
  # -- Number of consecutive negative tests before declaring failure
  failureThreshold: 3
  # -- Number of consecutive positive tests before counting it as a success
  successThreshold: 1
# Readiness probe settings
readinessProbe:
  # -- Initial delay before probing readiness
  initialDelaySeconds: 10
  # -- Period in seconds between readiness checks
  periodSeconds: 10
  # -- Timeout in seconds for readiness checks
  timeoutSeconds: 5
  # -- Number of consecutive negative tests before declaring failure
  failureThreshold: 3
  # -- Number of consecutive positive tests before counting it as a success
  successThreshold: 1
# Autoscaling parameters
autoscaling:
  # -- Enable auto-scaling for DocuHost
  enabled: false
  # -- Minimum number of replicas to deploy
  minReplicas: 1
  # -- Maximum number of replicas that can be deployed
  maxReplicas: 100
  # -- Target CPU utilization (percent) for each replica
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

##
# Service resource parameters for DocuHost
# ref: https://kubernetes.io/docs/concepts/services-networking/service/
##
service:
  # -- Type of service to create
  type: ClusterIP
  # -- DocuHost server port
  port: 8080
  # -- Nodeport to expose (type must be NodePort or LoadBalancer)
  nodeport: ""

##
# Ingress resource parameters for DocuHost
# ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
##
ingress:
  # -- Enable ingress record generation for Hello
  enabled: false
  # -- Ingress path type
  pathType: ImplementationSpecific
  # -- Force Ingress API version (automatically detected if not set)
  apiVersion: ""
  # -- Default host for the ingress record
  hostname: docuhost.local
  # -- Default path for the ingress record
  # NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
  path: /
  # -- Additional annotations for the Ingress resource. To enable certificate autogeneration, place cert-manager annotations here.
  # For a full list of possible ingress annotations, please see
  # ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
  # Use this parameter to set the required annotations for cert-manager, see
  # ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  #
  # e.g:
  # annotations:
  #   kubernetes.io/ingress.class: nginx
  #   cert-manager.io/cluster-issuer: cluster-issuer-name
  annotations: { }
  # -- Enable TLS configuration for the host defined at `ingress.hostname` parameter
  # TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
  tls: false
