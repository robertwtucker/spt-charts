## DocuHost chart values
##

## @section Document Host (DocuHost) parameters
##

# DocuHost image
## @param image.repository DocuHost image repository
## @param image.tag DocuHost image tag
## @param image.pullPolicy DocuHost image pull policy
## @param imagePullSecrets Specify container registry Secrets as an array
##
image:
  repository: registry.sptcloud.com/spt/docuhost
  tag: ""
  pullPolicy: IfNotPresent
## List of image repository pull secrets
## Secrets must be manually created in the namespace.
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
## Example:
## imagePullSecrets:
##   - name: myRegistryKeySecretName
##
imagePullSecrets: []
## @param app.env Environment in which the application is running (usually `development` or `production`)
## @param app.url Fully-qualified URL to the `documents` resource (gets prepend to document ID)
##
app:
  env: development
  url: http://localhost/api/v2/documents
auth:
  ## @param auth.secret Secret used to encode the JWT and encrypt things in transit
  ##
  secret: "" # i.e. `openssl rand -base64 32`
  ## @param auth.trustHost When set, tells Auth.js to trust the `X-Forwarded-Host` header from a reverse proxy
  ##
  trustHost: false
  ## @param auth.url Sets the AUTH_URL environment variable for the client, when not blank
  ##
  url: ""
  ## @param auth.auth0.audience Audience for scope assigned to token
  ## @param auth.auth0.id Auth0 Client ID for this application
  ## @param auth.auth0.secret Auth0 Client Secret for this application
  ## @param auth.auth0.issuer Domain associated with the Auth0 account
  ##
  auth0:
    audience: "urn:docuhost"
    id: ""
    secret: ""
    issuer: ""
## @param db.username Database user's name
## @param db.password Database user's password
## @param db.protocol Database protocol (usually `mongodb` or `mongodb+srv`)
## @param db.host Database host name
## @param db.port Database port (can be left empty to use mongodb's default of `27017`)
## @param db.name Database name
##
db:
  username: docuhost
  password: ""
  protocol: mongodb
  host: localhost
  port: ""
  name: documents
## @param shortlink.apiKey API Key to use for authorization
## @param shortlink.domain Domain name to use for short links
## @param shortlink.serviceUrl URL to use for short link service
##
shortlink:
  apiKey: ""
  domain: tinyurl.com
  serviceUrl: https://api.tinyurl.com
## @param nameOverride Partially override the name used for chart objects
##
nameOverride: ""
## @param fullnameOverride Fully override the name used for chart objects
##
fullnameOverride: ""
## @param existingConfigMap Name of a pre-existing configmap to use (if blank, one will be created by default)
##
existingConfigMap: ""
## @param existingSecret Name of a pre-existing secret to use (if blank, one will be created by default)
##
existingSecret: ""

## @section DocuHost deployment parameters
##

## @param replicaCount Number of DocuHost containers to deploy
##
replicaCount: 1
## @param serviceAccount.create Enable service account creation (otherwise, the `default` account will be used)
## @param serviceAccount.annotations Annotations to use with the service account
## @param serviceAccount.name Specify the name used for the service account
##
serviceAccount:
  create: false
  annotations: {}
  name: ""
## @param podAnnotations Annotations for DocuHost pods
##
podAnnotations: {}
## DocuHost pod SecurityContext
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext.fsGroup Group ID for the volumes of the DocuHost pod(s)
##
podSecurityContext:
  fsGroup: 1001
## Docuhost container SecurityContext
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
## @param securityContext.runAsUser User ID for container(s) in the Docuhost pod(s)
##
securityContext:
  runAsUser: 1001
## It is usually recommend not to specify default resources and to leave this as a conscious
## choice for the user. This also increases chances charts run on environments with little
## resources, such as Minikube. If you do want to specify resources, uncomment the following
## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
## @param resources.limits The resources limits for DocuHost containers
## @param resources.requests The requested resources for DocuHost containers
##
resources:
  ## Example:
  ## limits:
  ##   cpu: 100m
  ##   memory: 128Mi
  ##
  limits: {}
  ## Example:
  ## requests:
  ##   cpu: 100m
  ##   memory: 128Mi
  ##
  requests: {}
## @param nodeSelector Node labels for pod assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}
## @param tolerations Tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []
## @param affinity Affinity for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## NOTE: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when set
##
affinity: {}
## @param containerPort DocuHost container port
##
containerPort: 3000
## DocuHost pod livenessProbe configuration
## ref https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/.
## @param livenessProbe.initialDelaySeconds Initial delay before the probe is initiated
## @param livenessProbe.periodSeconds Period between probes
## @param livenessProbe.timeoutSeconds Time after which the probe times out
## @param livenessProbe.failureThreshold Number of failed probes before the container is deemed unavailable
## @param livenessProbe.successThreshold Number of successful probes before the container is considered available
##
livenessProbe:
  initialDelaySeconds: 2
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 3
  successThreshold: 1
## DocuHost pod readinessProbe configuration
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
## @param readinessProbe.initialDelaySeconds Initial delay before the probe is initiated
## @param readinessProbe.periodSeconds Period between probes
## @param readinessProbe.timeoutSeconds Time after which the probe times out
## @param readinessProbe.failureThreshold Number of failed probes before the container is deemed unavailable
## @param readinessProbe.successThreshold Number of successful probes before the container is considered ready
##
readinessProbe:
  initialDelaySeconds: 2
  periodSeconds: 30
  timeoutSeconds: 1
  failureThreshold: 3
  successThreshold: 1
## Autoscaling parameters
## @param autoscaling.enabled Enable auto-scaling for DocuHost
## @param autoscaling.minReplicas Minimum number of replicas to deploy
## @param autoscaling.maxReplicas Maximum number of replicas that can be deployed
## @param autoscaling.targetCPUUtilizationPercentage Target CPU utilization (percent) for each replica
## @param autoscaling.targetMemoryUtilizationPercentage Target memory utilization (percent) for each replica
##
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

## @section Traffic exposure parameters
##

## DocuHost service configuration
##
service:
  ## @param service.type Type of service to create
  type: ClusterIP
  ## @param service.port DocuHost server port
  port: 3000
  ## @param service.nodeport Nodeport to expose (type must be NodePort or LoadBalancer)
  nodeport: ""

## Docuhost ingress configuration
##
ingress:
  ## @param ingress.enabled Enable ingress record generation for Hello
  ##
  enabled: false
  ## @param ingress.pathType Ingress path type
  ##
  pathType: ImplementationSpecific
  ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
  ##
  apiVersion: ""
  ## @param ingress.hostname Default host for the ingress record
  ##
  hostname: docuhost.local
  ## @param ingress.path Default path for the ingress record
  ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
  ##
  path: /
  ## @param ingress.annotations Default/additional annotations for the ingress record
  ## To enable certificate autogeneration, place cert-manager annotations here.
  ## For a full list of possible ingress annotations, please see
  ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
  ## Use this parameter to set the required annotations for cert-manager, see
  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  ##
  ## e.g:
  ## annotations:
  ##   kubernetes.io/ingress.class: nginx
  ##   cert-manager.io/cluster-issuer: cluster-issuer-name
  ##
  annotations: {}
  ## @param ingress.tls Enable TLS configuration for the host defined by the `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
  ##
  tls: false

## @section k8s-wait-for parameters
##

## ref: https://github.com/groundnuty/k8s-wait-for
## @param wait.image.name k8s-wait-for image name
## @param wait.image.tag k8s-wait-for image tag
## @param wait.image.pullPolicy k8s-wait-for image pull policy
##
wait:
  image:
    # -- k8s-wait-for image name
    name: ghcr.io/groundnuty/k8s-wait-for
    # -- k8s-wait-for image tag
    tag: no-root-v2.0
    # -- k8s-wait-for image pull policy
    pullPolicy: IfNotPresent
