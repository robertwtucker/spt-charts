# Default values for ICM.

# -- Number of ICM containers to deploy
replicaCount: 1

# Quadient Inspire ICM image
image:
  # -- ICM image registry
  registry: registry.sptcloud.com
  # -- ICM image repository
  repository: inspire/icm
  # -- Override tag specified by `appVersion` in the chart file
  tag: 15.0.652.0-HF-postgresql
  # -- ICM image pull policy
  pullPolicy: IfNotPresent
  # -- ICM image pull secrets
  pullSecrets: []

# ICM configuration parameters
# -- Licensing mode for ICM
inspireLicense: 'CL'
# -- Inspire license server
inspireLicenseServer: ''
# -- ICM database host
databaseHost: 'postgresql'
# -- ICM database port
databasePort: '5432'
# -- ICM database name
databaseName: 'icm'
# -- Additional ICM database connection string parameters
databaseConnStringAdd: ''
# -- ICM database user
databaseUser: ''
# -- ICM database password
databasePassword: ''
# -- ICM database type
# Must be one of: `MicrosoftSQL` (default), `SQLAzure`, `MySQL`, `PostgreSQL`, `DB2`, `Oracle`
databaseType: 'PostgreSQL'
# -- Additional parameters for the ICM command
additionalParams: '-enablehttpconnections'

# -- Partially override the name used for chart objects
nameOverride: ''
# -- Fully override the name used for chart objects
fullnameOverride: ''
# -- Name of a pre-existing configmap to use (one will be created by default)
useExistingConfigMap: ''
# -- Name of a pre-existing secret to use (one will be created by default)
useExistingSecret: ''

## ICM service account parameters
serviceAccount:
  # -- Enable service account creation (will use `default` if false)
  create: false
  # -- Annotations to use with the service account
  annotations: {}
  # -- Force the name used for the service account
  name: ''

# ICM container resource requirements
# ref: https://kubernetes.io/docs/user-guide/compute-resources/
resources:
  # -- Resource limits for the ICM container
  limits: {}
  # -- Requested resources for the ICM container
  requests:
    memory: 512Mi
    cpu: 100m

# Container ports
containerPorts:
  # -- ICM service port
  icm: 30353
  # -- External ICM http port
  http: 8080

# -- Annotations for ICM pods
podAnnotations: {}
# -- Configure ICM pod security context
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
podSecurityContext: {}
# -- Configure security context (main ICM container only)
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
securityContext: {}
# -- Node labels for pod assignment
#ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}
# -- Tolerations for pod assignment
# ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []
# -- Affinity for pod assignment
# ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
# NOTE: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when set
affinity: {}
# Liveness probe settings
livenessProbe:
  # -- Initial delay before probing liveness
  initialDelaySeconds: 5
  # -- Period in seconds between liveness checks
  periodSeconds: 10
  # -- Timeout in seconds for liveness checks
  timeoutSeconds: 2
# Readiness probe settings
readinessProbe:
  # -- Initial delay before probing readiness
  initialDelaySeconds: 5
  # -- Period in seconds between readiness checks
  periodSeconds: 10
  # -- Timeout in seconds for readiness checks
  timeoutSeconds: 2

## Autoscaling parameters
autoscaling:
  # -- Enable auto-scaling for ICM
  enabled: false
  # -- Minimum number of replicas to deploy
  minReplicas: 1
  # -- Maximum number of replicas that can be deployed
  maxReplicas: 100
  # -- Target CPU utilization (percent) for each replica
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Service resource parameters for ICM
# ref: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # -- Type of service to create
  type: ClusterIP
  # -- ICM server port
  icm: 30353
  # -- HTTP(s) access port for ICM
  http: 8080
  # -- Nodeports to expose (NodePort or LoadBalancer)
  nodePorts:
    icm: ''
    http: ''

# Ingress resource parameters for ICM
# ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  # -- Enable ingress record generation for Hello
  enabled: false
  # -- Ingress path type
  pathType: ImplementationSpecific
  # -- Force Ingress API version (automatically detected if not set)
  apiVersion: ''
  # -- Default host for the ingress record
  hostname: icm.local
  # -- Default path for the ingress record
  # NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
  path: /
  # -- Additional annotations for the Ingress resource. To enable certificate autogeneration, place cert-manager annotations here.
  # For a full list of possible ingress annotations, please see
  # ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
  # Use this parameter to set the required annotations for cert-manager, see
  # ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  #
  # e.g:
  # annotations:
  #   kubernetes.io/ingress.class: nginx
  #   cert-manager.io/cluster-issuer: cluster-issuer-name
  annotations: {}
  # -- Enable TLS configuration for the host defined at `ingress.hostname` parameter
  # TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
  tls: false
