# Default values for Scaler.

# -- Number of Scaler containers to deploy
replicaCount: 1

# Quadient Inspire Scaler image
image:
  # -- Scaler image registry
  registry: registry.sptcloud.com
  # -- Scaler image repository
  repository: inspire/scaler
  # -- Override tag specified by `appVersion` in the chart file
  tag: 15.0.713.0-HF
  # -- Scaler image pull policy
  pullPolicy: IfNotPresent
  # -- Scaler image pull secrets
  pullSecrets: []

# Scaler configuration parameters
# -- Licensing mode for Scaler
inspireLicense: CL
# -- Inspire license server
inspireLicenseServer: ''
# -- Scaler database host
databaseHost: ''
# -- Scaler database port
databasePort: 5432
# -- Scaler database name
databaseName: 'scaler'
# -- Additional Scaler database connection string parameters
databaseConnStringAdd: ''
# -- Scaler database user
databaseUser: ''
# -- Scaler database password
databasePassword: ''
# -- Scaler database type
# Must be one of: `MicrosoftSQL` (default), `SQLAzure`, `MySQL`, `PostgreSQL`, `DB2`, `Oracle`
databaseType: 'PostgreSQL'
# -- ICM host
icmHost: ''
# -- ICM port
icmPort: 30353
# -- ICM username
icmUser: ''
# -- ICM password
icmPassword: ''
# -- Group to use for Scaler API authentication
icmApiAuthenticationGroup: 'RestApiUser'
# -- Enable use of SSL/TLS
useSsl: false

# -- Partially override the name used for chart objects
nameOverride: ''
# -- Fully override the name used for chart objects
fullnameOverride: ''
# -- Name of a pre-existing configmap to use (one will be created by default)
existingConfigMap: ''
# -- Name of a pre-existing secret to use (one will be created by default)
existingSecret: ''

## Scaler service account parameters
serviceAccount:
  # -- Enable service account creation (will use `default` if false)
  create: false
  # -- Annotations to use with the service account
  annotations: {}
  # -- Force the name used for the service account
  name: ''

# Scaler container port
containerPort: 30600

# Scaler container resource requirements
# ref: https://kubernetes.io/docs/user-guide/compute-resources/
resources:
  # -- Resource limits for the Scaler container
  limits: {}
  # -- Requested resources for the Scaler container
  requests:
    memory: 2Gi
    cpu: 100m

# -- Annotations for Scaler pods
podAnnotations: {}
# -- Configure Scaler pod security context
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
podSecurityContext: {}
# -- Configure security context (main Scaler container only)
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
securityContext: {}
# -- Node labels for pod assignment
#ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}
# -- Tolerations for pod assignment
# ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []
# -- Affinity for pod assignment
# ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
# NOTE: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when set
affinity: {}
# Liveness probe settings
livenessProbe:
  # -- Number of consecutive negative tests before declaring failure
  failureThreshold: 10
  # -- Number of consecutive positive tests before counting it as a success
  successThreshold: 1
  # -- Initial delay before probing liveness
  initialDelaySeconds: 120
  # -- Period in seconds between liveness checks
  periodSeconds: 10
  # -- Timeout in seconds for liveness checks
  timeoutSeconds: 2
# Readiness probe settings
readinessProbe:
  # -- Number of consecutive negative tests before declaring failure
  failureThreshold: 10
  # -- Number of consecutive positive tests before counting it as a success
  successThreshold: 1
  # -- Initial delay before probing readiness
  initialDelaySeconds: 120
  # -- Period in seconds between readiness checks
  periodSeconds: 10
  # -- Timeout in seconds for readiness checks
  timeoutSeconds: 2
# Restart policy
restartPolicy: Always
# Termination grace period (seconds)
terminationGracePeriodSeconds: 35

## Autoscaling parameters
autoscaling:
  # -- Enable auto-scaling for Scaler
  enabled: false
  # -- Minimum number of replicas to deploy
  minReplicas: 1
  # -- Maximum number of replicas that can be deployed
  maxReplicas: 100
  # -- Target CPU utilization (percent) for each replica
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Service resource parameters for Scaler
# ref: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # -- Type of service to create
  type: ClusterIP
  # -- Scaler server port
  port: 30600
  # -- Nodeport to expose (`service.type` must be NodePort or LoadBalancer)
  nodePort: ''

# Ingress resource parameters for Scaler
# ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  # -- Enable ingress record generation for Hello
  enabled: false
  # -- Ingress path type
  pathType: ImplementationSpecific
  # -- Force Ingress API version (automatically detected if not set)
  apiVersion: ''
  # -- Default host for the ingress record
  hostname: scaler.local
  # -- Default path for the ingress record
  # NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
  path: /
  # -- Additional annotations for the Ingress resource. To enable certificate autogeneration, place cert-manager annotations here.
  # For a full list of possible ingress annotations, please see
  # ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
  # Use this parameter to set the required annotations for cert-manager, see
  # ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  #
  # e.g:
  # annotations:
  #   kubernetes.io/ingress.class: nginx
  #   cert-manager.io/cluster-issuer: cluster-issuer-name
  annotations: {}
  # -- Enable TLS configuration for the host defined at `ingress.hostname` parameter
  # TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
  tls: false

# Persistence Parameters
# ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
persistence:
  # --  Enable persistence using Persistent Volume Claims
  enabled: true
  # -- Persistent Volume storage class
  # If defined, storageClassName: <storageClass>
  # If set to "-", storageClassName: "", which disables dynamic provisioning
  # If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner
  storageClass: ''
  # -- [array] Persistent Volume access modes
  accessModes:
    - ReadWriteOnce
  # -- Persistent Volume size
  size: 5Gi
  # -- The name of an existing PVC to use for persistence
  existingClaim: ''

# IPS Configuration Section
ips:
  # IPS image
  image:
    # -- IPS image registry
    registry: registry.sptcloud.com
    # -- IPS image repository
    repository: inspire/ips
    # -- Override tag specified by `appVersion` in the chart file
    tag: 15.0.652.0-HF
    # -- IPS image pull policy
    pullPolicy: IfNotPresent
    # -- IPS image pull secrets
    pullSecrets: []

  # -- Threads per IPS instance
  threadCount: 4
  # -- IPS container port
  containerPort: 30354

  # IPS container resource requirements
  # ref: https://kubernetes.io/docs/user-guide/compute-resources/
  resources:
    # -- Resource limits for the IPS container
    limits: {}
    # -- Requested resources for the IPS container
    requests:
      memory: 512Mi
      cpu: 100m

  # IPS container liveness probe settings
  livenessProbe:
    # -- Number of consecutive negative tests before declaring failure
    failureThreshold: 3
    # -- Number of consecutive positive tests before counting it as a success
    successThreshold: 1
    # -- Initial delay before probing liveness
    initialDelaySeconds: 10
    # -- Period in seconds between liveness checks
    periodSeconds: 10
    # -- Timeout in seconds for liveness checks
    timeoutSeconds: 2
  # IPS container readiness probe settings
  readinessProbe:
    # -- Number of consecutive negative tests before declaring failure
    failureThreshold: 3
    # -- Number of consecutive positive tests before counting it as a success
    successThreshold: 1
    # -- Initial delay before probing readiness
    initialDelaySeconds: 20
    # -- Period in seconds between readiness checks
    periodSeconds: 10
    # -- Timeout in seconds for readiness checks
    timeoutSeconds: 2
