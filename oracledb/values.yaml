# Oracle Database chart values

## @section Global parameters
##

## @param global.imageRegistry Global container image registry
## @param global.imagePullSecrets Global registry Secrets as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
## @param global.namespaceOverride Override the namespace for resources deployed by the chart (can itself be overridden by the local namespaceOverride)
##
global:
  imageRegistry: ""
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  # Example:
  # imagePullSecrets:
  #   - name: myRegistryKeySecretName
  imagePullSecrets: []
  storageClass: ""
  namespaceOverride: ""

## @section Common parameters
##

## @param nameOverride String to partially override the fullname template (will maintain the release name)
##
nameOverride: ""
## @param fullnameOverride String to fully override the fullname template
##
fullnameOverride: ""
## @param namespaceOverride String to fully override the namespace
##
namespaceOverride: ""
## @param commonLabels Add labels to all the deployed resources (evaluated as a template)
##
commonLabels: {}
## @param commonAnnotations Common annotations to add to all resources (evaluated as a template)
##
commonAnnotations: {}

## @section Oracle Database parameters
##

## Oracle Database image
## @param image.registry Oracle Database image container registry
## @param image.repository Oracle Database image repository
## @param image.tag Oracle Database image tag
## @param image.digest Oracle Database image digest in the format `sha256:aa....` (overrides `image.tag`)
## @param image.pullPolicy Oracle Database image pull policy
## @param image.pullSecrets Specify container registry Secrets as an array
##
image:
  registry: "container-registry.oracle.com"
  repository: "database/express"
  tag: "21.3.0-xe"
  digest: ""
  pullPolicy: IfNotPresent
  pullSecrets: []
## @param architecture Oracle Database server architecture (`standalone` or `replicated`)
##
architecture: standalone
## @param useStatefulSet Set to `true` to use a StatefulSet instead of a Deployment (only applicable when `architecture` == `standalone`)
##
useStatefulSet: false
## @param sid The Oracle Database SID that should be used (EE/SE default: `ORCLCDB`, XE preset: `XE`)
##
sid: ""
## @param pdb The Oracle Database PDB name that should be used (EE/SE default: `ORCLPDB1`, XE preset: `XEPDB1`)
##
pdb: ""
## @param characterSet The character set to use when creating the database (default: `AL32UTF8`)
##
characterSet: ""
## @param username The username is always `SYS` unless using an Autonomous Database (change to `ADMIN`)
##
username: SYS
## @param password Defines (in plain text) the password of the SYS database user
## Use the 'passwordSource' value to define the password using a Secret.
##
password: ""
## @param passwordSource.useSecret Use a Secret to define the password of the SYS database user
## @param passwordSource.secretName The name of the Secret containing the password
## @param passwordSource.secretKey The key of the Secret containing the password
##
passwordSource:
  useSecret: false
  secretName: ""
  secretKey: ""
## Start Oracle Database pod(s) without limitations on shared memory.
## By default docker and containerd (and possibly other container runtimes) limit /dev/shm to 64M.
##
shmVolume:
  ## @param shmVolume.enabled Enable emptyDir volume for /dev/shm in Oracle Database pod(s)
  ##
  enabled: false
  ## @param shmVolume.sizeLimit Set to enable a size limit on the shm tmpfs
  ## Note: the size of the tmpfs counts against container's memory limit.
  ## e.g:
  ## sizeLimit: 1Gi
  ##
  sizeLimit: ""
## Configure setup scripts to initialize the Oracle Database server.
##
setupScripts:
  ## @param setupScripts.existingConfigMap Name of an existing ConfigMap containing the script(s) to initialize the server (a non-empty value overrides `setupScripts.content`)
  ##
  existingConfigMap: ""
  ## @param setupScripts.content Script content to use for initial setup
  ##
  content: ""

## @section Oracle Database StatefulSet parameters
##

## @param annotations Annotations to be added to the Oracle Database StatefulSet (evaluated as a template)
##
annotations: {}
## @param labels Additional labels to be added to the Oracle Database StatefulSet (evaluated as a template)
##
labels: {}
## @param replicaCount Defines the number of Oracle Database nodes to be created after deployment (only when `architecture` == `replicated`)
## Ignored when `architecture'='standalone`.
##
replicaCount: 2
## @param updateStrategy.type Update strategy for the Oracle Database Statefulset (applied to Deployment when `architecture` == `standalone` and `useStatefulSet` == `false`)
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
## Example:
## updateStrategy:
##  type: RollingUpdate
##  rollingUpdate:
##    maxSurge: 25%
##    maxUnavailable: 25%
##
updateStrategy:
  type: RollingUpdate
## @param terminationGracePeriodSeconds Oracle Database termination grace period
##
terminationGracePeriodSeconds: ""
## @param existingServiceAccount Name of an existing service account to use (if blank, one will be created by default)
##
existingServiceAccount: ""
## @param podLabels Oracle Database pod labels
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
##
podLabels: {}
## @param podAnnotations Oracle Database pod annotations
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}
## Oracle Database Pod SecurityContext
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext.enabled Enable the Oracle Database pod SecurityContext
## @param podSecurityContext.fsGroup Group ID for the volumes of the Oracle Database pod(s)
##
podSecurityContext:
  enabled: true
  fsGroup: 54321
## Oracle Database container SecurityContext
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
## @param containerSecurityContext.enabled Enable the Oracle Database container SecurityContext
## @param containerSecurityContext.runAsUser User ID for container(s) in the Oracle Database pod(s)
## @param containerSecurityContext.runAsNonRoot Prohibit the container from running under the root context (UID 0)
##
containerSecurityContext:
  enabled: true
  runAsUser: 54321
  runAsNonRoot: true
## It is usually recommend not to specify default resources and to leave this as a conscious
## choice for the user. This also increases chances charts run on environments with little
## resources, such as Minikube. If you do want to specify resources, uncomment the following
## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
## @param resources.limits The resources limits for Oracle Database containers
## @param resources.requests The requested resources for Oracle Database containers
##
resources:
  ## Example:
  ## limits:
  ##   cpu: 100m
  ##   memory: 128Mi
  limits: {}
  ## Example:
  ## requests:
  ##   cpu: 100m
  ##   memory: 128Mi
  requests: {}
## Container ports
## @param containerPorts.oracledb Oracle Database container port
## @param containerPorts.emexpress EM Express container port
##
containerPorts:
  oracledb: 1521
  emexpress: 5500
## Oracle Database pod livenessProbe configuration (evaluated as a template)
## ref https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/.
## @param livenessProbe.enabled Enable the Oracle Database pod livenessProbe
## @param livenessProbe.initialDelaySeconds Initial delay before the probe is initiated
## @param livenessProbe.periodSeconds Period between probes
## @param livenessProbe.timeoutSeconds Time after which the probe times out
## @param livenessProbe.successThreshold Number of successful probes before the container is considered available
## @param livenessProbe.failureThreshold Number of failed probes before the container is deemed unavailable
##
livenessProbe:
  enabled: true
  initialDelaySeconds: 90
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 5
  successThreshold: 1
## Oracle Database pod readinessProbe configuration (evaluated as a template)
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
## @param readinessProbe.enabled Enable the Oracle Database pod readinessProbe
## @param readinessProbe.initialDelaySeconds Initial delay before the probe is initiated
## @param readinessProbe.periodSeconds Period between probes
## @param readinessProbe.timeoutSeconds Time after which the probe times out
## @param readinessProbe.successThreshold Number of successful probes before the container is considered ready
## @param readinessProbe.failureThreshold Number of failed probes before the container is deemed unavailable
##
readinessProbe:
  enabled: true
  initialDelaySeconds: 40
  periodSeconds: 20
  timeoutSeconds: 10
  failureThreshold: 5
  successThreshold: 1

## @section Traffic exposure parameters
##

## Service configuration
##
service:
  ## @param service.type Defines the value for the Service object (ClusterIP/LoadBalancer/NodePort)
  ##
  type: ClusterIP
  ## Ports to expose on the Service
  ##
  ports:
    ## @param service.ports.oracledb Oracle Database service port
    ##
    oracledb: 1521
    ## @param service.ports.emexpress EM Express service port
    ##
    emexpress: 5500
  ## NodePorts to expose
  ## NOTE: choose port between <30000-32767>
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  ##
  nodePorts:
    ## @param service.nodePorts.oracledb NodePort for the Oracle Database service
    ##
    oracledb: ""
    ## @param service.nodePorts.emexpress NodePort for the EM Express NodePort service
    ##
    emexpress: ""
  ## @param service.annotations Provide any additional service annotations which may be required
  ##
  annotations: {}
  headless:
    ## @param service.headless.annotations Annotations for the headless service
    ##
    annotations: {}
## Ingress (external access) configuration
##
ingress:
  ## @param ingress.enabled Enables an Ingress (provides external access and load balancing)
  enabled: false
  ## @param ingress.annotations Provide any additional annotations which may be required for the Ingress (evaluated as a template)
  ## Example:
  ## annotations:
  ## - kubernetes.io/ingress.class: nginx
  ## - kubernetes.io/tls-acme: "true"
  ##
  annotations:
  ## @param ingress.hosts Defines the host(s) for this Ingress
  ## Example:
  ## hosts:
  ## - host: oracledb.example.com
  ##
  hosts: {}
  ## @param ingress.tls Defines the TLS-enabled host(s) and options
  ## Example:
  ## tls:
  ## - secretName: chart-example-tls
  ## - hosts:
  ##   - chart-example.local
  ##
  tls: []

## @section Persistence parameters
##

## Enable persistence using Persistent Volume Claims
## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  ## @param persistence.enabled Enable Oracle data persistence using a PVC
  ##
  enabled: true
  ## @param persistence.existingClaim Name of an existing PVC to use (only when `architecture` == `standalone`)
  ## Requires 'persistence.enabled: true'
  ## If defined, PVC must be created manually before volume will be bound.
  ## Ignored when 'oracledb.architecture' == 'replicated'
  ##
  existingClaim: ""
  ## @param persistence.resourcePolicy Set to `keep` to avoid removing PVCs during a Helm delete operation
  ##
  resourcePolicy: ""
  ## @param persistence.mountPath The path the volume will be mounted at
  mountPath: /opt/oracle/oradata
  ## @param persistence.storageClass PVC Storage Class for Oracle data volume
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning.
  ## If undefined (the default) or set to null, no storageClassName spec is
  ## set, choosing the default provisioner (gp2 on AWS, standard on GKE, AWS & OpenStack)
  ##
  storageClass: ""
  ## @param persistence.accessModes Persistent Volume Access Mode for the Oracle data volume
  ##
  accessModes:
    - ReadWriteOnce
  ## @param persistence.size PVC Storage Request for the Oracle data volume
  ##
  size: 8Gi
  ## @param persistence.annotations Additional annotations, as required
  ##
  annotations: {}
  ## Extra tuning for VolumeClaimTemplates
  ##
  volumeClaimTemplates:
    ## @param persistence.volumeClaimTemplates.selector A label query over volumes to consider for binding (e.g. when using local volumes)
    ## A label query over volumes to consider for binding (e.g. when using local volumes)
    ## ref: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#labelselector-v1-meta
    ##
    selector: []
    ## @param persistence.volumeClaimTemplates.requests Custom PVC requests attributes
    ## Sometime cloud providers use additional requests attributes to provision custom storage instance
    ## ref: https://cloud.ibm.com/docs/containers?topic=containers-file_storage#file_dynamic_statefulset
    ##
    requests: {}
    ## @param persistence.volumeClaimTemplates.dataSource Add a DataSource to the VolumeClaimTemplate
    ##
    dataSource: {}
