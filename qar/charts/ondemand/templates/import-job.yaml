{{- if .Release.IsInstall }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "qar.applicationName" . }}-ondemand-import
  labels:
    app: {{ include "qar.applicationName" . }}
    role: {{ .Values.role }}-import
#  annotations:
#    "helm.sh/resource-policy": keep
spec:
  template:
    metadata:
      name: {{ include "qar.applicationName" . }}-ondemand-import
      labels:
        app: {{ include "qar.applicationName" . }}
        role: {{ .Values.role }}-import
    spec:
      restartPolicy: OnFailure
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.global.imagePullSecrets }}
      - name: {{ . }}
      {{- end }}
      {{- end }}
      initContainers:
      - name: {{ include "qar.applicationName" . }}-ondemand-wait-active
        image: "{{ .Values.k8sWaitFor.image.name }}:{{ .Values.k8sWaitFor.image.tag }}"
        imagePullPolicy: IfNotPresent
        args:
        - "pod"
        - "-lrole=ondemand"
      containers:
      - name: {{ include "qar.applicationName" . }}-ondemand-import
        image: "{{ .Values.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        args:
        - "sh"
        - "-c"
        - "${QAR_HOME}/scripts/import-settings.sh"
        env:
          {{ include "ondemand.env.default" . | nindent 8 }}
  backoffLimit: 0
{{- end }}
