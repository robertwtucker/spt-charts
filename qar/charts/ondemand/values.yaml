# QAR CMOD chart values
image:
  # -- Defines the URL address of the QAR server image stored in a container repository.
  name: registry.sptcloud.com/qar/ondemand
  # -- Overrides tag specified by the `appVersion` in the chart file.
  tag: ""
  # -- QAR image pull policy [Always|IfNotPresent].
  pullPolicy: IfNotPresent

db:
  # -- Specifies the DBMS used by the Library Server [DB2|ORACLE].
  engine: ORACLE
  # -- Defines the Oracle TNS service name for the CMOD database. If left undefined, the
  # lower-cased `serverInstanceName` value is used.
  tnsServiceName: ""
  # -- Determines the number of processes that CMOD starts on the library server to
  # handle connections to the database. Specify a value that supports the peak number
  # of concurrent database connections library server needs to handle.
  numSubServers: 10
# -- Used in the header line of the `ars.ini` file to identify the name of the CMOD instance.
odInstanceName: ARCHIVE
# -- Identifies the name of the CMOD database (will be lower-cased for database creation).
# If not provided, the name `archive` will be used.
serverInstanceName: ARCHIVE
# -- Determines whether the server program is linked to a cache-only storage manager or an
# archive storage manager. Required on library servers. [TSM|NO_TSM|CACHE_ONLY]
storageManager: NO_TSM
trace:
  # -- Enables the system trace facility
  enabled: false

# REST API configuration
restapi:
  image:
    # -- Defines the URL address of the QAR REST API server image stored in a container repository.
    name: registry.sptcloud.com/qar/ondemand-restapi
    # -- Overrides tag specified by the `appVersion` in the chart file.
    tag: ""
    # -- QAR REST API image pull policy [Always|IfNotPresent].
    pullPolicy: IfNotPresent

  service:
    # -- Provide any additional annotations which may be required.
    annotations: {}
    # -- Defines the value for the Kubernetes service object [ClusterIP|LoadBalancer].
    type: ClusterIP
    # Node ports to expose
    # NOTE: choose port between <30000-32767>
    # ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    nodePorts:
      # -- Node port for WAS
      http: 9080

  # Learn about liveness probes at https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/.
  # Learn about the probe's configuration settings at https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes.
  livenessProbe:
    # -- Initial delay before probing liveness
    initialDelaySeconds: 5
    # -- Period in seconds between liveness checks
    periodSeconds: 30
    # -- Timeout in seconds for liveness checks
    timeoutSeconds: 1
    # -- Number of consecutive negative tests before declaring failure
    failureThreshold: 5
    # -- Number of consecutive positive tests before counting it as a success
    successThreshold: 1

  # Learn about readiness probes at https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/.
  # Learn about the probe's configuration settings at https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes.
  readinessProbe:
    # -- Initial delay before probing readiness
    initialDelaySeconds: 10
    # -- Period in seconds between readiness checks
    periodSeconds: 30
    # -- Timeout in seconds for readiness checks
    timeoutSeconds: 1
    # -- Number of consecutive negative tests before declaring failure
    failureThreshold: 5
    # -- Number of consecutive positive tests before counting it as a success
    successThreshold: 1

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  ingress:
    # -- Enables Ingress, a Kubernetes API object that provides external access and load balancing.
    enabled: false
    # -- Provide any additional annotations which may be required.
    annotations: {}
    hosts:
      # -- Defines the host(s) for this Ingress.
      - host: ""
    # -- Defines the TLS-enabled host(s) and options.
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  persistence:
    # -- Enable REST API pool configuration persistence using a PVC.
    enabled: true
    # -- Name of an existing PVC to use.
    existingClaim: ""
    # -- The path the volume will be mounted at.
    mountPath: /opt/qar/config/rest/odpool
    # -- If defined, storageClassName: <storageClass>
    # If set to "-", storageClassName: "", which disables dynamic provisioning.
    # If undefined (the default) or set to null, no storageClassName spec is
    # set, choosing the default provisioner. (gp2 on AWS, standard on GKE, AWS & OpenStack)
    storageClass: ""
    # -- PVC Access Mode for the CMOD data volume.
    accessModes:
      - ReadWriteOnce
    # -- PVC Storage Request for the CMOD data volume.
    size: 100Ki
    # -- Additional annotations, as required.
    annotations: {}
    # -- Additional labels, as required.
    labels: {}

# End REST API block

# ARSLOAD server configuration
arsload:
  # -- Time interval in seconds to sleep (arsload command defaults to 600)
  timeInterval: 600

  persistence:
    # -- Enable ARSLOAD "hot-folder" input using a PVC.
    enabled: false
    # -- Name of an existing PVC to use.
    existingClaim: ""
    # -- The path the volume will be mounted at in the ARSLOAD container.
    mountPath: /opt/qar/data/load

  # Learn about liveness probes at https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/.
  # Learn about the probe's configuration settings at https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes.
  livenessProbe:
    # -- Initial delay before probing liveness
    initialDelaySeconds: 5
    # -- Period in seconds between liveness checks
    periodSeconds: 30
    # -- Timeout in seconds for liveness checks
    timeoutSeconds: 1
    # -- Number of consecutive negative tests before declaring failure
    failureThreshold: 5
    # -- Number of consecutive positive tests before counting it as a success
    successThreshold: 1

  # Learn about readiness probes at https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/.
  # Learn about the probe's configuration settings at https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes.
  readinessProbe:
    # -- Initial delay before probing readiness
    initialDelaySeconds: 10
    # -- Period in seconds between readiness checks
    periodSeconds: 30
    # -- Timeout in seconds for readiness checks
    timeoutSeconds: 1
    # -- Number of consecutive negative tests before declaring failure
    failureThreshold: 5
    # -- Number of consecutive positive tests before counting it as a success
    successThreshold: 1

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

# End ARSLOAD block

# Full Text Search server configuration
fts:
  image:
    # -- Defines the URL address of the FTS server image stored in a container repository.
    name: registry.sptcloud.com/qar/ondemand-fts
    # -- Overrides tag specified by the `appVersion` in the chart file.
    tag: ""
    # -- FTS image pull policy [Always|IfNotPresent].
    pullPolicy: IfNotPresent

  service:
    # -- Provide any additional annotations which may be required.
    annotations: {}
    # -- Defines the value for the Kubernetes service object [ClusterIP|LoadBalancer].
    type: ClusterIP
    # Node ports to expose
    # NOTE: choose port between <30000-32767>
    # ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    nodePorts:
      # -- Node port for WAS
      http: 9181

  # Learn about liveness probes at https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/.
  # Learn about the probe's configuration settings at https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes.
  livenessProbe:
    # -- Initial delay before probing liveness
    initialDelaySeconds: 5
    # -- Period in seconds between liveness checks
    periodSeconds: 30
    # -- Timeout in seconds for liveness checks
    timeoutSeconds: 1
    # -- Number of consecutive negative tests before declaring failure
    failureThreshold: 5
    # -- Number of consecutive positive tests before counting it as a success
    successThreshold: 1

  # Learn about readiness probes at https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/.
  # Learn about the probe's configuration settings at https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes.
  readinessProbe:
    # -- Initial delay before probing readiness
    initialDelaySeconds: 10
    # -- Period in seconds between readiness checks
    periodSeconds: 30
    # -- Timeout in seconds for readiness checks
    timeoutSeconds: 1
    # -- Number of consecutive negative tests before declaring failure
    failureThreshold: 5
    # -- Number of consecutive positive tests before counting it as a success
    successThreshold: 1

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

# End REST API block

# -- QAR component designation.
role: ondemand

# -- Enter the name of an existing service account to use. Otherwise, one will be created by default.
existingServiceAccount: ""

# -- Provides the ability to customize the deployment using Kubernetes annotations.
podAnnotations: {}

# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
podSecurityContext:
  # -- ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups.
  runAsUser: 1001
  # -- ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems.
  fsGroup: 1001
  # -- ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups.
  #  runAsNonRoot: true

# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
securityContext:
  # -- ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged.
  privileged: false
  # -- ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation.
  allowPrivilegeEscalation: false
  # -- ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups.
  runAsUser: 1001
  # -- ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#capabilities.
  runAsGroup: 1001
  # -- The default (recommended) configuration prohibits all Linux capabilities.
  capabilities:
    drop:
      - all

# -- Defines the number of replicas to be created after deployment.
replicaCount: 1

service:
  # -- Provide any additional annotations which may be required.
  annotations: {}
  # -- Defines the value for the Kubernetes service object [ClusterIP|LoadBalancer].
  type: ClusterIP
  # Node ports to expose
  # NOTE: choose port between <30000-32767>
  # ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  nodePorts:
    # -- Node port for CMOD
    ondemand: 1445

# Learn about liveness probes at https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/.
# Learn about the probe's configuration settings at https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes.
livenessProbe:
  # -- Initial delay before probing liveness
  initialDelaySeconds: 2
  # -- Period in seconds between liveness checks
  periodSeconds: 30
  # -- Timeout in seconds for liveness checks
  timeoutSeconds: 1
  # -- Number of consecutive negative tests before declaring failure
  failureThreshold: 3
  # -- Number of consecutive positive tests before counting it as a success
  successThreshold: 1

# Learn about readiness probes at https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/.
# Learn about the probe's configuration settings at https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes.
readinessProbe:
  # -- Initial delay before probing readiness
  initialDelaySeconds: 2
  # -- Period in seconds between readiness checks
  periodSeconds: 30
  # -- Timeout in seconds for readiness checks
  timeoutSeconds: 1
  # -- Number of consecutive negative tests before declaring failure
  failureThreshold: 3
  # -- Number of consecutive positive tests before counting it as a success
  successThreshold: 1

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

ingress:
  # -- Enables Ingress, a Kubernetes API object that provides external access and load balancing.
  enabled: false
  # -- Provide any additional annotations which may be required.
  annotations: {}
  hosts:
    # -- Defines the host(s) for this Ingress.
    - host: ""
  # -- Defines the TLS-enabled host(s) and options.
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

persistence:
  # -- Enable CMOD Library server data persistence using a PVC.
  enabled: true
  # -- Name of an existing PVC to use.
  existingClaim: ""
  # -- The path the volume will be mounted at.
  mountPath: /opt/qar/data
  # -- If defined, storageClassName: <storageClass>
  # If set to "-", storageClassName: "", which disables dynamic provisioning.
  # If undefined (the default) or set to null, no storageClassName spec is
  # set, choosing the default provisioner. (gp2 on AWS, standard on GKE, AWS & OpenStack)
  storageClass: ""
  # -- PVC Access Mode for the CMOD data volume.
  accessModes:
    - ReadWriteOnce
  # -- PVC Storage Request for the CMOD data volume.
  size: 8Gi
  # -- Additional annotations, as required.
  annotations: {}
  # -- Additional labels, as required.
  labels: {}

# Learn about Horizontal Pod Autoscaler at https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
autoscaling:
  # -- Enables the autoscaling feature.
  enabled: false
  # -- Defines the lower limit for the number of CMOD nodes that can be set by the autoscaling configuration.
  minReplicas: 1
  # -- Defines the upper limit for the number of CMOOD nodes that can be set by the autoscaling configuration.
  maxReplicas: 3
  # -- Kubernetes calculates average utilization this way: ((pod cpu usage)/(scaler.request + ips.request).
  # CPU requests and CPU limits must be configured using the same values.
  targetCPUUtilizationPercentage: 80

# Learn about k8s-wait-for at https://github.com/groundnuty/k8s-wait-for
k8sWaitFor:
  image:
    # -- Defines the name of the k8s-wait-for image stored in a container repository.
    name: groundnuty/k8s-wait-for
    # -- Specifies the version tag to use.
    tag: no-root-v1.7

# -- Defines whether to create a batch job to perform initial setup processing.
performInitialSetup: false
