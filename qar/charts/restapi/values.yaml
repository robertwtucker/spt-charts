# REST API configuration

# -- QAR component designation.
role: restapi

# -- Enter the name of an existing service account to use. Otherwise, one will be created by default.
existingServiceAccount: ""

# -- Provides the ability to customize the deployment using Kubernetes annotations.
podAnnotations: {}

# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
podSecurityContext:
  # -- ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups.
  runAsUser: 1001
  # -- ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems.
  fsGroup: 1001
  # -- ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups.
  #  runAsNonRoot: true

# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
securityContext:
  # -- ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged.
  privileged: false
  # -- ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation.
  allowPrivilegeEscalation: false
  # -- ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups.
  runAsUser: 1001
  # -- ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#capabilities.
  runAsGroup: 1001
  # -- The default (recommended) configuration prohibits all Linux capabilities.
  capabilities:
    drop:
      - all

# -- Defines the number of replicas to be created after deployment.
replicaCount: 1

service:
  # -- Provide any additional annotations which may be required.
  annotations: {}
  # -- Defines the value for the Kubernetes service object [ClusterIP|LoadBalancer|NodePort].
  type: ClusterIP
  # NodePort value to assign (.service.type must be `NodePort`).
  # NOTE: choose port between <30000-32767>
  # ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  nodePorts:
    # -- Node port for WAS
    http: ""

# Learn about liveness probes at https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/.
# Learn about the probe's configuration settings at https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes.
livenessProbe:
  # -- Initial delay before probing liveness
  initialDelaySeconds: 5
  # -- Period in seconds between liveness checks
  periodSeconds: 30
  # -- Timeout in seconds for liveness checks
  timeoutSeconds: 1
  # -- Number of consecutive negative tests before declaring failure
  failureThreshold: 5
  # -- Number of consecutive positive tests before counting it as a success
  successThreshold: 1

# Learn about readiness probes at https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/.
# Learn about the probe's configuration settings at https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes.
readinessProbe:
  # -- Initial delay before probing readiness
  initialDelaySeconds: 10
  # -- Period in seconds between readiness checks
  periodSeconds: 30
  # -- Timeout in seconds for readiness checks
  timeoutSeconds: 1
  # -- Number of consecutive negative tests before declaring failure
  failureThreshold: 5
  # -- Number of consecutive positive tests before counting it as a success
  successThreshold: 1

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

ingress:
  # -- Enables Ingress, a Kubernetes API object that provides external access and load balancing.
  enabled: false
  # -- Provide any additional annotations which may be required.
  annotations: {}
  hosts:
    # -- Defines the host(s) for this Ingress.
    - host: ""
  # -- Defines the TLS-enabled host(s) and options.
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

persistence:
  # -- Enable REST API pool configuration persistence using a PVC.
  enabled: true
  # -- Name of an existing PVC to use.
  existingClaim: ""
  # -- The path the volume will be mounted at.
  mountPath: /opt/qar/config/rest/odpool
  # -- If defined, storageClassName: <storageClass>
  # If set to "-", storageClassName: "", which disables dynamic provisioning.
  # If undefined (the default) or set to null, no storageClassName spec is
  # set, choosing the default provisioner. (gp2 on AWS, standard on GKE, AWS & OpenStack)
  storageClass: ""
  # -- PVC Access Mode for the CMOD data volume.
  accessModes:
    - ReadWriteOnce
  # -- PVC Storage Request for the CMOD data volume.
  size: 100Ki
  # -- Additional annotations, as required.
  annotations: {}
  # -- Additional labels, as required.
  labels: {}
